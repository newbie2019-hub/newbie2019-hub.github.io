[{"data":1,"prerenderedAt":612},["ShallowReactive",2],{"content-query-Fjnp5EbJDL":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"title":7,"description":8,"date":9,"preview":10,"draft":6,"tags":11,"categories":15,"slug":16,"body":17,"_type":606,"_id":607,"_source":608,"_file":609,"_stem":610,"_extension":611},"/basic-laravel-multi-tenancy","",false,"Basic Laravel Multi-Tenancy","Let's learn the basic or simpliest form of multi-tenancy and third party packages","December 01, 2024","/img/laravel-cover.png",[12,13,14],"multi-tenant","laravel","php",[14,12,13],"basic-laravel-multi-tenancy",{"type":18,"children":19,"toc":604},"root",[20,28,34,48,57,92,97,206,211,216,351,356,493,498,557,562,573,598],{"type":21,"tag":22,"props":23,"children":24},"element","h4",{"id":16},[25],{"type":26,"value":27},"text","Basic Laravel Multi-tenancy",{"type":21,"tag":29,"props":30,"children":31},"p",{},[32],{"type":26,"value":33},"Tenancy often concerned as team, domain or something more complex but the most basic definition of multi-tenancy is that it divides your data based on the user, account, etc.,",{"type":21,"tag":29,"props":35,"children":36},{},[37,39],{"type":26,"value":38},"From ",{"type":21,"tag":40,"props":41,"children":45},"a",{"href":42,"rel":43},"https://tenancyforlaravel.com/docs/v3/introduction/",[44],"nofollow",[46],{"type":26,"value":47},"tenancy for laravel website",{"type":21,"tag":49,"props":50,"children":51},"blockquote",{},[52],{"type":21,"tag":29,"props":53,"children":54},{},[55],{"type":26,"value":56},"What is multi-tenancy?",{"type":21,"tag":49,"props":58,"children":59},{},[60,65,78],{"type":21,"tag":29,"props":61,"children":62},{},[63],{"type":26,"value":64},"Multi-tenancy is the ability to provide your service to multiple users (tenants) from a single hosted instance of the application. This is contrasted with deploying the application separately for each user.",{"type":21,"tag":29,"props":66,"children":67},{},[68,70,76],{"type":26,"value":69},"You may find this talk insightful: ",{"type":21,"tag":40,"props":71,"children":74},{"href":72,"rel":73},"https://multitenantlaravel.com/",[44],[75],{"type":26,"value":72},{"type":26,"value":77},". Simply going through the slides will give you 80% of the value of the talk in under five minutes.",{"type":21,"tag":29,"props":79,"children":80},{},[81,83,90],{"type":26,"value":82},"Note that if you just want to, say, scope todo tasks to the current user, there's no need to use a multi-tenancy package. Just use calls like ",{"type":21,"tag":84,"props":85,"children":87},"code",{"className":86},[],[88],{"type":26,"value":89},"auth()->user()->tasks()",{"type":26,"value":91},". This is the simplest form of multi-tenancy.",{"type":21,"tag":29,"props":93,"children":94},{},[95],{"type":26,"value":96},"Repeating condition of filtering by user id",{"type":21,"tag":98,"props":99,"children":102},"pre",{"className":100,"code":101,"language":14,"meta":5,"style":5},"language-php shiki shiki-themes github-dark","public function index()\n{\n    $books = Book::where('user_id', auth()->id())->get();\n    return response()->json($books);\n}\n\npublic function store(BookRequest $request)\n{\n    $book = Book::create($request->validated() + ['user_id' => auth()->id()]);\n    return response()->json($book);\n}\n",[103],{"type":21,"tag":84,"props":104,"children":105},{"__ignoreMap":5},[106,117,126,135,144,153,163,172,180,189,198],{"type":21,"tag":107,"props":108,"children":111},"span",{"class":109,"line":110},"line",1,[112],{"type":21,"tag":107,"props":113,"children":114},{},[115],{"type":26,"value":116},"public function index()\n",{"type":21,"tag":107,"props":118,"children":120},{"class":109,"line":119},2,[121],{"type":21,"tag":107,"props":122,"children":123},{},[124],{"type":26,"value":125},"{\n",{"type":21,"tag":107,"props":127,"children":129},{"class":109,"line":128},3,[130],{"type":21,"tag":107,"props":131,"children":132},{},[133],{"type":26,"value":134},"    $books = Book::where('user_id', auth()->id())->get();\n",{"type":21,"tag":107,"props":136,"children":138},{"class":109,"line":137},4,[139],{"type":21,"tag":107,"props":140,"children":141},{},[142],{"type":26,"value":143},"    return response()->json($books);\n",{"type":21,"tag":107,"props":145,"children":147},{"class":109,"line":146},5,[148],{"type":21,"tag":107,"props":149,"children":150},{},[151],{"type":26,"value":152},"}\n",{"type":21,"tag":107,"props":154,"children":156},{"class":109,"line":155},6,[157],{"type":21,"tag":107,"props":158,"children":160},{"emptyLinePlaceholder":159},true,[161],{"type":26,"value":162},"\n",{"type":21,"tag":107,"props":164,"children":166},{"class":109,"line":165},7,[167],{"type":21,"tag":107,"props":168,"children":169},{},[170],{"type":26,"value":171},"public function store(BookRequest $request)\n",{"type":21,"tag":107,"props":173,"children":175},{"class":109,"line":174},8,[176],{"type":21,"tag":107,"props":177,"children":178},{},[179],{"type":26,"value":125},{"type":21,"tag":107,"props":181,"children":183},{"class":109,"line":182},9,[184],{"type":21,"tag":107,"props":185,"children":186},{},[187],{"type":26,"value":188},"    $book = Book::create($request->validated() + ['user_id' => auth()->id()]);\n",{"type":21,"tag":107,"props":190,"children":192},{"class":109,"line":191},10,[193],{"type":21,"tag":107,"props":194,"children":195},{},[196],{"type":26,"value":197},"    return response()->json($book);\n",{"type":21,"tag":107,"props":199,"children":201},{"class":109,"line":200},11,[202],{"type":21,"tag":107,"props":203,"children":204},{},[205],{"type":26,"value":152},{"type":21,"tag":29,"props":207,"children":208},{},[209],{"type":26,"value":210},"Bind user ID for every query automatically and when creating the model also. This may be repeated for other model and to prevent repetition we can extract this to a trait and apply it to the model.",{"type":21,"tag":29,"props":212,"children":213},{},[214],{"type":26,"value":215},"Note: There are also other ways that this can be achieved.",{"type":21,"tag":98,"props":217,"children":219},{"className":100,"code":218,"language":14,"meta":5,"style":5},"class Book extends Model {\n\n    protected static function boot()\n    {\n        parent::boot();\n\n        self::creating(function($model) {\n            $model->user_id = auth()->id()\n        });\n\n        self::addGlobalScope(function(Builder $builder) {\n            $builder->where('user_id', auth()->id());\n        })\n    }\n\n}\n",[220],{"type":21,"tag":84,"props":221,"children":222},{"__ignoreMap":5},[223,231,238,246,254,262,269,277,285,293,300,308,317,326,335,343],{"type":21,"tag":107,"props":224,"children":225},{"class":109,"line":110},[226],{"type":21,"tag":107,"props":227,"children":228},{},[229],{"type":26,"value":230},"class Book extends Model {\n",{"type":21,"tag":107,"props":232,"children":233},{"class":109,"line":119},[234],{"type":21,"tag":107,"props":235,"children":236},{"emptyLinePlaceholder":159},[237],{"type":26,"value":162},{"type":21,"tag":107,"props":239,"children":240},{"class":109,"line":128},[241],{"type":21,"tag":107,"props":242,"children":243},{},[244],{"type":26,"value":245},"    protected static function boot()\n",{"type":21,"tag":107,"props":247,"children":248},{"class":109,"line":137},[249],{"type":21,"tag":107,"props":250,"children":251},{},[252],{"type":26,"value":253},"    {\n",{"type":21,"tag":107,"props":255,"children":256},{"class":109,"line":146},[257],{"type":21,"tag":107,"props":258,"children":259},{},[260],{"type":26,"value":261},"        parent::boot();\n",{"type":21,"tag":107,"props":263,"children":264},{"class":109,"line":155},[265],{"type":21,"tag":107,"props":266,"children":267},{"emptyLinePlaceholder":159},[268],{"type":26,"value":162},{"type":21,"tag":107,"props":270,"children":271},{"class":109,"line":165},[272],{"type":21,"tag":107,"props":273,"children":274},{},[275],{"type":26,"value":276},"        self::creating(function($model) {\n",{"type":21,"tag":107,"props":278,"children":279},{"class":109,"line":174},[280],{"type":21,"tag":107,"props":281,"children":282},{},[283],{"type":26,"value":284},"            $model->user_id = auth()->id()\n",{"type":21,"tag":107,"props":286,"children":287},{"class":109,"line":182},[288],{"type":21,"tag":107,"props":289,"children":290},{},[291],{"type":26,"value":292},"        });\n",{"type":21,"tag":107,"props":294,"children":295},{"class":109,"line":191},[296],{"type":21,"tag":107,"props":297,"children":298},{"emptyLinePlaceholder":159},[299],{"type":26,"value":162},{"type":21,"tag":107,"props":301,"children":302},{"class":109,"line":200},[303],{"type":21,"tag":107,"props":304,"children":305},{},[306],{"type":26,"value":307},"        self::addGlobalScope(function(Builder $builder) {\n",{"type":21,"tag":107,"props":309,"children":311},{"class":109,"line":310},12,[312],{"type":21,"tag":107,"props":313,"children":314},{},[315],{"type":26,"value":316},"            $builder->where('user_id', auth()->id());\n",{"type":21,"tag":107,"props":318,"children":320},{"class":109,"line":319},13,[321],{"type":21,"tag":107,"props":322,"children":323},{},[324],{"type":26,"value":325},"        })\n",{"type":21,"tag":107,"props":327,"children":329},{"class":109,"line":328},14,[330],{"type":21,"tag":107,"props":331,"children":332},{},[333],{"type":26,"value":334},"    }\n",{"type":21,"tag":107,"props":336,"children":338},{"class":109,"line":337},15,[339],{"type":21,"tag":107,"props":340,"children":341},{"emptyLinePlaceholder":159},[342],{"type":26,"value":162},{"type":21,"tag":107,"props":344,"children":346},{"class":109,"line":345},16,[347],{"type":21,"tag":107,"props":348,"children":349},{},[350],{"type":26,"value":152},{"type":21,"tag":29,"props":352,"children":353},{},[354],{"type":26,"value":355},"Move the boot method to a trait so that it can be applied directly to the models that will need it.",{"type":21,"tag":98,"props":357,"children":359},{"className":100,"code":358,"language":14,"meta":5,"style":5},"use Illuminate\\Database\\Eloquent\\Builder;\n\ntrait FilterByUser {\n\n    protected static function boot()\n    {\n        parent::boot();\n\n        self::creating(function($model) {\n            $model->user_id = auth()->id()\n        });\n\n        self::addGlobalScope(function(Builder $builder) {\n            $builder->where('user_id', auth()->id());\n        })\n    }\n\n}\n",[360],{"type":21,"tag":84,"props":361,"children":362},{"__ignoreMap":5},[363,371,378,386,393,400,407,414,421,428,435,442,449,456,463,470,477,485],{"type":21,"tag":107,"props":364,"children":365},{"class":109,"line":110},[366],{"type":21,"tag":107,"props":367,"children":368},{},[369],{"type":26,"value":370},"use Illuminate\\Database\\Eloquent\\Builder;\n",{"type":21,"tag":107,"props":372,"children":373},{"class":109,"line":119},[374],{"type":21,"tag":107,"props":375,"children":376},{"emptyLinePlaceholder":159},[377],{"type":26,"value":162},{"type":21,"tag":107,"props":379,"children":380},{"class":109,"line":128},[381],{"type":21,"tag":107,"props":382,"children":383},{},[384],{"type":26,"value":385},"trait FilterByUser {\n",{"type":21,"tag":107,"props":387,"children":388},{"class":109,"line":137},[389],{"type":21,"tag":107,"props":390,"children":391},{"emptyLinePlaceholder":159},[392],{"type":26,"value":162},{"type":21,"tag":107,"props":394,"children":395},{"class":109,"line":146},[396],{"type":21,"tag":107,"props":397,"children":398},{},[399],{"type":26,"value":245},{"type":21,"tag":107,"props":401,"children":402},{"class":109,"line":155},[403],{"type":21,"tag":107,"props":404,"children":405},{},[406],{"type":26,"value":253},{"type":21,"tag":107,"props":408,"children":409},{"class":109,"line":165},[410],{"type":21,"tag":107,"props":411,"children":412},{},[413],{"type":26,"value":261},{"type":21,"tag":107,"props":415,"children":416},{"class":109,"line":174},[417],{"type":21,"tag":107,"props":418,"children":419},{"emptyLinePlaceholder":159},[420],{"type":26,"value":162},{"type":21,"tag":107,"props":422,"children":423},{"class":109,"line":182},[424],{"type":21,"tag":107,"props":425,"children":426},{},[427],{"type":26,"value":276},{"type":21,"tag":107,"props":429,"children":430},{"class":109,"line":191},[431],{"type":21,"tag":107,"props":432,"children":433},{},[434],{"type":26,"value":284},{"type":21,"tag":107,"props":436,"children":437},{"class":109,"line":200},[438],{"type":21,"tag":107,"props":439,"children":440},{},[441],{"type":26,"value":292},{"type":21,"tag":107,"props":443,"children":444},{"class":109,"line":310},[445],{"type":21,"tag":107,"props":446,"children":447},{"emptyLinePlaceholder":159},[448],{"type":26,"value":162},{"type":21,"tag":107,"props":450,"children":451},{"class":109,"line":319},[452],{"type":21,"tag":107,"props":453,"children":454},{},[455],{"type":26,"value":307},{"type":21,"tag":107,"props":457,"children":458},{"class":109,"line":328},[459],{"type":21,"tag":107,"props":460,"children":461},{},[462],{"type":26,"value":316},{"type":21,"tag":107,"props":464,"children":465},{"class":109,"line":337},[466],{"type":21,"tag":107,"props":467,"children":468},{},[469],{"type":26,"value":325},{"type":21,"tag":107,"props":471,"children":472},{"class":109,"line":345},[473],{"type":21,"tag":107,"props":474,"children":475},{},[476],{"type":26,"value":334},{"type":21,"tag":107,"props":478,"children":480},{"class":109,"line":479},17,[481],{"type":21,"tag":107,"props":482,"children":483},{"emptyLinePlaceholder":159},[484],{"type":26,"value":162},{"type":21,"tag":107,"props":486,"children":488},{"class":109,"line":487},18,[489],{"type":21,"tag":107,"props":490,"children":491},{},[492],{"type":26,"value":152},{"type":21,"tag":29,"props":494,"children":495},{},[496],{"type":26,"value":497},"Book Model will now look like this.",{"type":21,"tag":98,"props":499,"children":501},{"className":100,"code":500,"language":14,"meta":5,"style":5},"use App\\Traits\\FilterByUser;\n\nclass Book extends Model {\n    use FilterByUser;\n\n    protected $fillable = ['book', 'author', 'published_at'];\n}\n",[502],{"type":21,"tag":84,"props":503,"children":504},{"__ignoreMap":5},[505,513,520,527,535,542,550],{"type":21,"tag":107,"props":506,"children":507},{"class":109,"line":110},[508],{"type":21,"tag":107,"props":509,"children":510},{},[511],{"type":26,"value":512},"use App\\Traits\\FilterByUser;\n",{"type":21,"tag":107,"props":514,"children":515},{"class":109,"line":119},[516],{"type":21,"tag":107,"props":517,"children":518},{"emptyLinePlaceholder":159},[519],{"type":26,"value":162},{"type":21,"tag":107,"props":521,"children":522},{"class":109,"line":128},[523],{"type":21,"tag":107,"props":524,"children":525},{},[526],{"type":26,"value":230},{"type":21,"tag":107,"props":528,"children":529},{"class":109,"line":137},[530],{"type":21,"tag":107,"props":531,"children":532},{},[533],{"type":26,"value":534},"    use FilterByUser;\n",{"type":21,"tag":107,"props":536,"children":537},{"class":109,"line":146},[538],{"type":21,"tag":107,"props":539,"children":540},{"emptyLinePlaceholder":159},[541],{"type":26,"value":162},{"type":21,"tag":107,"props":543,"children":544},{"class":109,"line":155},[545],{"type":21,"tag":107,"props":546,"children":547},{},[548],{"type":26,"value":549},"    protected $fillable = ['book', 'author', 'published_at'];\n",{"type":21,"tag":107,"props":551,"children":552},{"class":109,"line":165},[553],{"type":21,"tag":107,"props":554,"children":555},{},[556],{"type":26,"value":152},{"type":21,"tag":29,"props":558,"children":559},{},[560],{"type":26,"value":561},"The concept of multi-tenancy enables a single application instance to serve multiple users (tenants) while isolating their data securely. However, for simple scenarios like scoping resources to individual users, implementing a full multi-tenancy package is unnecessary. Instead, you can manage resource filtering by leveraging traits to minimize code repetition.",{"type":21,"tag":29,"props":563,"children":564},{},[565,567],{"type":26,"value":566},"For developers requiring robust multi-tenancy solutions in Laravel, Here are ",{"type":21,"tag":568,"props":569,"children":570},"strong",{},[571],{"type":26,"value":572},"some recommended packages:",{"type":21,"tag":574,"props":575,"children":576},"ol",{},[577,588],{"type":21,"tag":578,"props":579,"children":580},"li",{},[581],{"type":21,"tag":40,"props":582,"children":585},{"href":583,"rel":584},"https://tenancyforlaravel.com/docs/v3/quickstart",[44],[586],{"type":26,"value":587},"Tenancy For Laravel",{"type":21,"tag":578,"props":589,"children":590},{},[591],{"type":21,"tag":40,"props":592,"children":595},{"href":593,"rel":594},"https://spatie.be/docs/laravel-multitenancy/v4/introduction",[44],[596],{"type":26,"value":597},"Laravel Multi-tenancy",{"type":21,"tag":599,"props":600,"children":601},"style",{},[602],{"type":26,"value":603},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":5,"searchDepth":119,"depth":119,"links":605},[],"markdown","content:05.basic-laravel-multi-tenancy.md","content","05.basic-laravel-multi-tenancy.md","05.basic-laravel-multi-tenancy","md",1743474492109]